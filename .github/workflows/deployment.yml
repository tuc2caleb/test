name: 'Terraform'

on:
  push:
    branches: [ "dev", "prod" ]
  pull_request:
    branches: ["dev"]
  pull_request_target:
    branches:
          - dev
          - main

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform_network:
    name: 'Terraform Network'
    runs-on: ubuntu-latest
    environment: dev
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}/terraform/networks
    
    env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # - name: Setup Terraform
    #   uses: hashicorp/setup-terraform@v2
    #   with:
    #     cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    
    - name: Set up AWS CLI
      run: |
           sudo apt-get update
           sudo apt-get install -y awscli
           aws --version    

    - name: Navigate to Networks Directory
      run:  cd ${{ github.workspace }}/terraform/networks

    - name: Terraform Init
      run: terraform init

    - name: Terraform Format
      run: terraform fmt

    - name: Terraform Plan
      run: terraform plan -input=false
    
    - name: Terraform Apply
      if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false

  terraform_webserver:
    name: "Terraform Webserver"
    runs-on: ubuntu-latest
    environment: dev
    needs: terraform_network
    defaults:
      run:
        shell: bash
        working-directory: terraform/webservers

    env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # - name: Setup Terraform
    #   uses: hashicorp/setup-terraform@v2
    #   with:
    #     cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan -input=false

      # On push to "prod", build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
